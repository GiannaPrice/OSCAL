<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://scap.nist.gov/schema/oscal" xmlns:oscal="http://scap.nist.gov/schema/oscal">
  <!-- We can have a catalog, or we can have only declarations for catalogs -->
  <!--
    start = element oscal-catalog { declarations, catalog } 
    have initial sections
    declare   - declares local parameters and settings including constraints on controls
                (enumerated values for properties, regexes and what not)
    also declares bindings to authorities (e.g. sources for transclusion/comparison)?
  -->
  <xs:element name="catalog">
    <xs:annotation>
      <xs:documentation>A set of controls or groups of controls, consistent in form and maintained together.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="oscal:title"/>
        <xs:element minOccurs="0" ref="oscal:declarations"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:div"/>
        <xs:choice>
          <xs:element maxOccurs="unbounded" ref="oscal:group"/>
          <xs:element maxOccurs="unbounded" ref="oscal:control"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:div"/>
        <xs:element minOccurs="0" ref="oscal:references"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- do we want a 'runtime' element for runtime bindings? such as parameters -->
  <!--
    declarations includes declarations for control types, parameters (names/types),
    authorities (source data for transclusion etc. etc.)
  -->
  <xs:element name="declarations">
    <xs:annotation>
      <xs:documentation>Specifications and settings for processing.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="href">
        <xs:annotation>
          <xs:documentation>A out-of-line document providing OSCAL declarations.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="group">
    <xs:annotation>
      <xs:documentation>A group of controls or of groups of controls.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="oscal:title"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:prop"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:stmt"/>
        <xs:choice>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:group"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:control"/>
        </xs:choice>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:div"/>
        <xs:element minOccurs="0" ref="oscal:references"/>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:idAttr"/>
      <xs:attributeGroup ref="oscal:typeAttr"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="div">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="oscal:title"/>
        <xs:group ref="oscal:prose"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:div"/>
        <xs:element minOccurs="0" ref="oscal:references"/>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:idAttr"/>
      <xs:attributeGroup ref="oscal:typeAttr"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="control">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="oscal:title"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:prop"/>
        <xs:element ref="oscal:desc"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:stmt"/>
        <xs:element minOccurs="0" ref="oscal:extensions"/>
        <xs:element minOccurs="0" ref="oscal:references"/>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:idAttr"/>
      <xs:attributeGroup ref="oscal:typeAttr"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="title" type="xs:string"/>
  <xs:element name="prop">
    <xs:annotation>
      <xs:documentation>A property, i.e. a named and controlled value, specific to a control or group of controls.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="oscal:whatnot">
          <xs:attribute name="name" use="required" type="xs:NCName"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <!-- on prop, not(@name = ../(prop|stmt)/@name) -->
  <xs:element name="desc">
    <xs:complexType>
      <xs:group ref="oscal:prose"/>
    </xs:complexType>
  </xs:element>
  <!--
    stmt is a bit of controlled prose: its title is implicit in its name
    e.g. stmt[@name='objectives'] might be displayed with title "Objectives:"
  -->
  <xs:element name="stmt">
    <xs:annotation>
      <xs:documentation>Any information pertaining specifically to this control, as collected and presented under a regular heading.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:group ref="oscal:prose"/>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <!-- on stmt, not(@name = ../(prop|stmt)/@name) -->
  <xs:group name="prose">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="oscal:ol"/>
        <xs:element ref="oscal:p"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <!--
    cluster = element cluster { control+ | prop+ | ref+ }
    on group, not(*/@name != */@name) ie all names must be the same
  -->
  <xs:element name="extensions">
    <xs:annotation>
      <xs:documentation>Extensions or enhancements to a control.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal:control"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="references">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal:ref"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ref">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="oscal:std"/>
        <xs:element ref="oscal:citation"/>
      </xs:choice>
      <xs:attributeGroup ref="oscal:idAttr"/>
    </xs:complexType>
  </xs:element>
  <!-- add mixed-citation or equivalent -->
  <xs:element name="std">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="oscal:whatnot">
          <xs:attribute name="href" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="citation">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="oscal:whatnot">
          <xs:attribute name="href" type="xs:anyURI"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="p">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="oscal:whatnot">
          <xs:attributeGroup ref="oscal:idAttr"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="ol">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal:li"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="li" type="oscal:whatnot"/>
  <xs:attributeGroup name="idAttr">
    <xs:attribute name="id" type="xs:ID"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="typeAttr">
    <xs:attribute name="type"/>
  </xs:attributeGroup>
  <!-- html! -->
  <xs:complexType name="whatnot" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="oscal:ol"/>
      <xs:element ref="oscal:em"/>
      <xs:element ref="oscal:xref"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="em" type="xs:string"/>
  <xs:element name="xref" type="xs:string"/>
</xs:schema>
