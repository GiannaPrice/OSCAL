default namespace = "http://scap.nist.gov/schema/oscal"

# We can have a catalog, or we can have only declarations for catalogs
start = (catalog | declarations)

# start = element oscal-catalog { declarations, catalog } 
# have initial sections
# declare   - declares local parameters and settings including constraints on controls
#             (enumerated values for properties, regexes and what not)
# also declares bindings to authorities (e.g. sources for transclusion/comparison)?

catalog = element catalog { title, declarations?, section*, (group+ | control+), section*, references? }

# do we want a 'runtime' element for runtime bindings? such as parameters

# declarations includes declarations for control types, parameters (names/types),
# authorities (source data for transclusion etc. etc.)
declarations = ( element declarations { attribute href { text } |
  ( control-spec*, param-spec*, authority* ) } )

control-spec = element control-spec {
        typeAttr,
        element required { (property*, statement*) }?,
        element optional { (property*, statement*) }?
      }+

# property may contain only id, only regex, both id and regex, or (sequence of) values
property =
  element property {
    attribute name { xsd:NCName },
    ((element identifier    { empty }?, element regex { text }? ) |
       element value { text }* )
  }
  
statement =
  element statement {
    attribute name { xsd:NCName },
    title
  }

param-spec   = element parameter {
  attribute name { text }, title?, element value { text }? }

authority    = empty

group = element group {
  idAttr, typeAttr,
  title, prop*, stmt*, (group* | control*), section*, references? }

section = element div { idAttr, typeAttr,
  title, prose, section*, references? }

control =
  element control {
    idAttr, typeAttr,
    title?, prop*,
    desc, stmt*,
    extensions?,
    references?
  }

title = element title { text }

prop =
  element prop {
    attribute name { xsd:NCName },
    whatnot
  }
# on prop, not(@name = ../(prop|stmt)/@name)

desc = element desc { prose }

# stmt is a bit of controlled prose: its title is implicit in its name
# e.g. stmt[@name='objectives'] might be displayed with title "Objectives:"

stmt =
  element stmt {
    attribute name { xsd:NCName },
    prose }
# on stmt, not(@name = ../(prop|stmt)/@name)

prose = (ol | p)*

# cluster = element cluster { control+ | prop+ | ref+ }
# on group, not(*/@name != */@name) ie all names must be the same

extensions = element extensions { control+ }

references = element references { ref+ }

ref = element ref { idAttr, (std | citation)* }
# add mixed-citation or equivalent

std =  element std {
         attribute href { xsd:anyURI }?,
         whatnot
  }

citation =  element citation {
         attribute href { xsd:anyURI }?,
         whatnot
  }

p =
  element p { idAttr, whatnot }

ol =
  element ol {
    element li { whatnot }+
  }

idAttr   = attribute id { xsd:ID }?

typeAttr = attribute type { text }?

# html!
whatnot = (
  semantical | ol | inlines | text )*

inlines = (  element em { text } | element xref { attribute href { text }?, text } )

# not html!
semantical = ( withdrawn | assign | select )

# A placeholder status report typically with a cross-reference
withdrawn = element withdrawn { (inlines | text)* }

# A value to be assigned by responder
assign = element assign { attribute name { text }?,
  (inlines | text)* }

# A selection to be made by responder
select = element select {
  element choice { (assign | inlines | text)* }* }

