<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../lib/oscal-working.rnc" type="application/relax-ng-compact-syntax"?>
<?xml-stylesheet type="text/css" href="../lib/oscal.css" title="Regular" alternate="yes"?>
<?xml-stylesheet type="text/css" href="../lib/oscal-mapping.css" title="Tabular" alternate="yes"?>
<?xml-stylesheet type="text/xsl" href="oscal-tabular-display.xsl"?>
<catalog xmlns="http://scap.nist.gov/schema/oscal">
  <title>SP800-53A to OSCAL Mapping</title>
  <group>
    <prop class="source">SP800-53A element</prop>
    <prop class="target">OSCAL element</prop>
    <control class="mapping">
      <prop class="source">family</prop>
      <prop class="target">group[@class='family']/title</prop>
      <stmt class="concept">
        <p>The assignment of each control to a control family is represented in the OSCAL by
          locating the control in a group designated for the family. The title of the group
          indicates the family.</p>
      </stmt>
      <stmt class="remarks">
        <p>SP800-53 has 18 families, from <q>Access Control</q> (AC) to <q>System and Information
            Integrity</q> (SI).</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">control-class</prop>
      <prop class="target">prop[@class='control-class']</prop>
      <stmt class="remarks">
        <p>Three values appear in the data: <q>Technical</q>, <q>Operational</q> and
            <q>Management</q>.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">number</prop>
      <prop class="target">prop[@class='number']</prop>
      <stmt class="concept">
        <p>Control numbers are composed by combining a code for the family (AC through SI) with a
          (consecutive) number identifying the control. Control enhancements are also numbered
          hierarchically based on their position inside their containing controls (and
          enhancements).</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">control/title</prop>
      <prop class="target">control/title</prop>
    </control>
    <control class="mapping">
      <prop class="source">priority</prop>
      <prop class="target">prop[@class='priority']</prop>
      <stmt class="remarks">
        <p>Values are <q>P1</q> through <q>P4</q>.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">description</prop>
      <prop class="target">stmt[@class='description']</prop>
      <stmt class="concept">
        <p>In the XML, 800-53A has an element named <code>description</code>; in the PDF the section
          is entitled <q>Control</q>. This is the normative description of the control.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">supplemental-guidance</prop>
      <prop class="target">stmt[@class='guidance']</prop>
      <stmt class="remarks">
        <p>Note the normalization of <q>supplemental guidance</q> to <q>guidance</q>. This may align
          the statement with others e.g. ISO27002 <q>implementation guidance</q>.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">objectives</prop>
      <prop class="target">[none]</prop>
      <stmt class="remarks">
        <p>Wrapper element in XML can be removed, retaining its contents.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">objective</prop>
      <prop class="target">enhancement[@class='objective']</prop>
    </control>
    <control class="mapping">
      <prop class="source">decisions</prop>
      <prop class="target">[none]</prop>
      <stmt class="remarks">
        <p>Wrapper element in XML can be removed, retaining its contents.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">decision</prop>
      <prop class="target">enhancement[@class='decision']</prop>
    </control>
    <control class="mapping">
      <prop class="source">potential-assessments</prop>
      <prop class="target">[none]</prop>
      <stmt class="remarks">
        <p>Wrapper element in XML can be removed, retaining its contents.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">potential-assessment</prop>
      <prop class="target">enhancement[@class='assessment']</prop>
    </control>
    <control class="mapping">
      <prop class="source">object</prop>
      <prop class="target">prop[@class='object']</prop>
      <stmt class="concept">
        <p>In the source, <code>object</code> elements specify the (multiple) focuses of an
          assessment (a kind of control enhancement).</p>
      </stmt>
      <stmt class="remarks">
        <p>The property is <em>not</em> required by declaration to be a singleton.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">references</prop>
      <prop class="target">references</prop>
      <stmt class="concept">
        <p>The <q>References</q> section, with links to external documents.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">reference</prop>
      <prop class="target">ref/*</prop>
      <stmt class="concept">
        <p>An individual reference.</p>
      </stmt>
      <stmt class="remarks">
        <p>Produces a <code>ref</code> element containing <code>std</code> or <code>citation</code>.
          Auto-extraction produces <code>citation</code> since not all references cite standards.
          More often, <code>std</code>would be better.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">control-enhancements</prop>
      <prop class="target">[none]</prop>
      <stmt class="remarks">
        <p>Wrapper element in XML can be removed, retaining its contents.</p>
      </stmt>
    </control>
    <control class="mapping">
      <prop class="source">control-enhancement</prop>
      <prop class="target">enhancement[@class='sp800-53-enhancement]</prop>
    </control>
    <control class="mapping">
      <prop class="source">baseline-impact</prop>
      <prop class="target">prop[@name='baseline-impact']</prop>
      <stmt class="concept">
        <p>Values are always <code>HIGH</code> or <code>MODERATE</code>.</p>
      </stmt>
    </control>
  </group>
    
    
    
    
</catalog>