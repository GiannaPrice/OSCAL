

Link to paper on SWISS:

https://www.ncbi.nlm.nih.gov/books/NBK430699/
https://videocast.nih.gov/summary.asp?Live=23182&start=13045

OSCAL will be a little thing we can drop into STS documents

Rules for OSCAL

Must conform to strawman schema (XSD) - qv
In addition
  Uniqueness constraints over 'nb'
  
Three purposes of schemas (in XML for data interchange):
  system configuration / pre-optimization
  checkpoint testing of documents to support workflow
  contracts definition btw parties to data interchange

But a 'schema' that can serve all these purposes must be more than an XSD
  (For one thing, a schema is not complete without its spec. For another,
  unassisted XSD cannot address all the requirements for the above. But XSD
  is not the only tool in the XML toolkit.)

Three levels to validation (the 'declaration of constraints')
  Formal, grammar-based
  Formal, query (assertion) based
  Environment setup (UI, 'lore')
  
A formal, grammar-based schema looks down at documents from on high: it is the 'god's eye view' defining what can exist
  It is what you need when you are starting out and have nothing.
A query-based assertion-based approach to validation looks "bottom up", from the data. Its question is not,
 can I exist, but rather, given that I exist, of what quality am I.
A capable language needs both.
It also needs the third layer, the "social" layer (which is indeed what it lives and dies by)

The 'schema' that does all these will (today) be a combination or hybrid between
  XSD (or RNG or DTD) to serve the functions of the tag grammar
  Schematron or a workalike (XPath based) to provide assertion-based validation
  CSS+oxygen extensions or XForms to configure the top layer (operational environment)



Rules for strawman OSCAL


prp/@name is not repeatable w/in parent's scope including children of sibling groups
  (which are, however, like named among themselves)
within a group, all prp/@name or nb/@flag must be the same

(this way we know what is repeatable b/c we have oscal:prp('x') will be either control/prp or control/group/prp depending on repeatability

The order of properties and statements is not formally constrained (by the XSD or other means) - because each one has a label (its name) that identifies it among its siblings, any desired order can always be reconstructed.




1. A control (element) must have nb (element) w/ values 'x','y'
2. A control/nb may not have any values except 'x' 'y'
(3. 'x' and 'y' are unique is implicit in general rule 3)
