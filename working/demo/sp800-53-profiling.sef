<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.15" timeStamp="2017-07-28T10:37:50.954-04:00" target="JS">
 <co id="0" binds="1 2">
  <globalVariable name="Q{}filtered-catalog" type="document-node()" line="14" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <doc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="15" base="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" validation="preserve">
    <applyT bSlot="0">
     <gVarRef role="select" name="Q{}source" bSlot="1"/>
    </applyT>
   </doc>
  </globalVariable>
 </co>
 <co id="3" binds="">
  <mode name="Q{}label" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="0" flags="os" line="184" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}stmt)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='stmt';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="184" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="guidance"/>
     </gc>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="185" name="h3" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <valueOf flags="l">
      <str val="Supplemental Guidance"/>
     </valueOf>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}stmt)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='stmt';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="234" name="h3" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="label"/>
      </att>
      <valueOf line="235" flags="l">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <first>
           <sequence>
            <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            <str val="Statement"/>
           </sequence>
          </first>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
      <valueOf line="235" flags="l">
       <str val=" "/>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="4" rank="1" minImp="0" slots="0" flags="os" line="173" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="173" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="related"/>
     </gc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="9" rank="0" minImp="0" slots="0" flags="os" line="246" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="247" name="span" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="label"/>
      </att>
      <valueOf flags="l">
       <str val="link: "/>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="1" minImp="0" slots="0" flags="os" line="161" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}feat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='feat';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="161" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="assessment"/>
     </gc>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="162" name="h5" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="label"/>
      </att>
      <valueOf line="163" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </data>
       </convert>
      </valueOf>
      <valueOf line="163" flags="l">
       <str val=" "/>
      </valueOf>
      <valueOf line="165" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <filter flags="b">
           <axis name="child" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
           <gc op="=" card="1:1" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            </data>
            <str val="method"/>
           </gc>
          </filter>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="1" minImp="0" slots="0" flags="os" line="157" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}feat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='feat';"/>
     <gcEE vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="157" op="=" card="N:1" comp="CCC">
      <literal count="3">
       <str val="statement"/>
       <str val="objective"/>
       <str val="statement-item"/>
      </literal>
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
     </gcEE>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="0" minImp="0" slots="0" flags="os" line="240" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}feat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='feat';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="241" name="h5" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="label"/>
      </att>
      <valueOf line="242" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </data>
       </convert>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" line="171" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="171" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="object"/>
     </gc>
    </p.withPredicate>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="171">
     <str val="▸ "/>
    </valueOf>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="os" line="159" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
     <gcEE vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="159" op="=" card="N:1" comp="CCC">
      <literal count="2">
       <str val="description"/>
       <str val="decision"/>
      </literal>
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
     </gcEE>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="6" rank="0" minImp="0" slots="0" flags="os" line="226" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="227" name="span" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="label"/>
      </att>
      <valueOf line="228" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </data>
       </convert>
      </valueOf>
      <valueOf line="228" flags="l">
       <str val=" "/>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="1">
  <mode name="Q{}inline" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="176" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="176" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}rel)" jsTest="return item.name=='rel'"/>
      </data>
      <str val="related"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="177">
     <elem name="span" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
      <sequence>
       <att name="class" flags="l">
        <str val="related"/>
       </att>
       <applyT line="178" flags="i" bSlot="0">
        <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
       </applyT>
      </sequence>
     </elem>
     <choose line="180">
      <fn name="not">
       <isLast test="1"/>
      </fn>
      <valueOf>
       <str val=", "/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="5" binds="">
  <template name="Q{}css" flags="os" line="250" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" slots="0">
   <elem role="body" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="251" name="style" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
    <sequence>
     <att name="type" flags="l">
      <str val="text/css"/>
     </att>
     <valueOf flags="l">
      <str val="&#xA;html, body { font-size: 10pt }&#xA;div { margin-left: 1rem }&#xA;&#xA;#xmljellysandwich_body { max-width: 80% }&#xA;&#xA;.control &gt; div, .subcontrol &gt; div { margin-left: 0em }&#xA;&#xA;.tag { color: green; font-family: sans-serif; font-size: 80%; font-weight: bold }&#xA;&#xA;&#xA;.catalog { }&#xA;&#xA;.title { }&#xA;&#xA;.control &gt; .title { font-size: 140% }&#xA;.subcontrol &gt; .title { font-size: 120% }&#xA;&#xA;.declarations { }&#xA;&#xA;.group { }&#xA;&#xA;.control { }&#xA;&#xA;.prop { }&#xA;&#xA;.feat { }&#xA;&#xA;.stmt { }&#xA;&#xA;.p { }&#xA;&#xA;.link { }&#xA;&#xA;.references { }&#xA;&#xA;.ref { }&#xA;&#xA;.citation { }&#xA;&#xA;.subcontrol { }&#xA;&#xA;.label { font-family: sans-serif; font-size: 80%; font-weight: bold }&#xA;&#xA;#xmljellysandwich_directory table { margin-left: 85%; font-size: 90%; margin-top: 1em; float: right; position: fixed;&#xA;  padding: 0.5em; background-color: lightsteelblue }&#xA;&#xA;.selected { color: black }&#xA;.excluded { color: grey }&#xA;&#xA;.control &gt; .statement { border: thin solid black; margin-left: 0em; padding: 0.5em  }&#xA;&#xA;.decision { border-left: thin solid black; padding-left: 1em  }&#xA;&#xA;div.excluded div { display: none }&#xA;&#xA;.control { border: thin solid black; padding: 0.5em; margin-top: 0.5em }&#xA;.subcontrol { border: thin dotted black; padding: 0.5em; margin-top: 0.5em }&#xA;.control * { margin-top: 0.5em; margin-bottom: 0em }&#xA;.control *:first-child { margin-top: 0em }&#xA;&#xA;div.ref, div.related { margin-left: 0em; padding: 0.25em; background-color: lightsteelblue }&#xA;      "/>
     </valueOf>
    </sequence>
   </elem>
  </template>
 </co>
 <co id="6" binds="">
  <mode name="Q{}switch" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="1" flags="os" line="71" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="72">
     <param name="switching" slot="0">
      <doc role="select" base="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" flags="t" text="excluded" validation="preserve">
       <valueOf flags="Sl">
        <str val="excluded"/>
       </valueOf>
      </doc>
      <supplied role="conversion" slot="0"/>
     </param>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="73" name="ixsl:set-attribute" type="item()*">
      <str val="class"/>
      <fn name="string-join">
       <sequence>
        <data>
         <varRef name="switching" slot="0"/>
        </data>
        <filter flags="b">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="tokenize">
           <cvUntyped to="xs:string">
            <data>
             <dot type="attribute(Q{}class)"/>
            </data>
           </cvUntyped>
           <str val="\s+"/>
           <str val=""/>
          </fn>
         </slash>
         <fn name="not">
          <gcEE op="=" card="N:1" comp="CCC">
           <literal count="2">
            <str val="selected"/>
            <str val="excluded"/>
           </literal>
           <dot type="xs:string"/>
          </gcEE>
         </fn>
        </filter>
       </sequence>
       <str val=" "/>
      </fn>
     </ifCall>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="7" binds="6 6 6">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="52" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="52" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="baseline"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="54">
     <message>
      <sequence role="select">
       <valueOf>
        <str val="Checked: "/>
       </valueOf>
       <valueOf>
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
         </data>
        </convert>
       </valueOf>
      </sequence>
      <str role="terminate" val="no"/>
      <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
     </message>
     <applyT line="59" mode="Q{}switch" bSlot="0">
      <fn role="select" name="key">
       <str val="Q{http://saxon.sf.net/}kk104"/>
       <literal count="2">
        <str val="control"/>
        <str val="subcontrol"/>
       </literal>
       <root/>
      </fn>
     </applyT>
     <applyT line="61" mode="Q{}switch" flags="t" bSlot="1">
      <fn role="select" name="key">
       <str val="controldiv-by-baseline-impact"/>
       <fn name="normalize-space">
        <cvUntyped to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
         </data>
        </cvUntyped>
       </fn>
      </fn>
      <withParam name="switching" as="document-node()">
       <doc line="62" base="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" flags="t" text="selected" validation="preserve">
        <valueOf flags="Sl">
         <str val="selected"/>
        </valueOf>
       </doc>
      </withParam>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="48" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="48" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="allclear"/>
     </gc>
    </p.withPredicate>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="49" mode="Q{}switch" flags="t" bSlot="2">
     <fn role="select" name="key">
      <str val="Q{http://saxon.sf.net/}kk103"/>
      <literal count="2">
       <str val="control"/>
       <str val="subcontrol"/>
      </literal>
      <root/>
     </fn>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="8" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" line="342" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" eval="7" flags="pU" as="item()*" slots="2">
   <arg name="who" as="element()"/>
   <arg name="ilk" as="xs:string"/>
   <gcEE role="body" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="339" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
    <forEach>
     <fn name="tokenize">
      <cvUntyped to="xs:string">
       <data>
        <slash line="345" simple="1">
         <varRef name="who" slot="0"/>
         <axis line="339" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </slash>
       </data>
      </cvUntyped>
      <str val="\s+"/>
      <str val=""/>
     </fn>
     <fn name="lower-case">
      <dot type="xs:string"/>
     </fn>
    </forEach>
    <varRef line="345" name="ilk" slot="1"/>
   </gcEE>
  </function>
 </co>
 <co id="9" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}classes" line="337" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" eval="3" flags="pU" as="item()*" slots="1">
   <arg name="who" as="element()"/>
   <forEach role="body" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="339">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <slash simple="1">
        <varRef name="who" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
       </slash>
      </data>
     </cvUntyped>
     <str val="\s+"/>
     <str val=""/>
    </fn>
    <fn name="lower-case">
     <dot type="xs:string"/>
    </fn>
   </forEach>
  </function>
 </co>
 <co id="10" binds="5 1">
  <template name="Q{}xmljellysandwich_pack" flags="os" line="20" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" slots="0">
   <sequence role="body" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="22">
    <resultDoc global="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;" local="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
     <str role="href" val="#xmljellysandwich_css"/>
     <callT role="content" line="23" name="css" bSlot="0"/>
    </resultDoc>
    <resultDoc line="26" global="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;" local="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;">
     <str role="href" val="#xmljellysandwich_body"/>
     <applyT role="content" line="27" flags="i" bSlot="1">
      <slash role="select" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="13|0|XTTE0510|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="node()" jsTest="return true;"/>
      </slash>
     </applyT>
    </resultDoc>
    <resultDoc line="30" global="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;method=xml&#xA;" local="#&#xA;#Fri Jul 28 10:37:50 EDT 2017&#xA;">
     <str role="href" val="#xmljellysandwich_directory"/>
     <elem role="content" line="32" name="form" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
      <elem name="table" flags="l">
       <sequence>
        <att name="id" flags="l">
         <str val="baseline_key"/>
        </att>
        <forEachGroup line="33" algorithm="by">
         <fn role="select" name="key">
          <str val="Q{http://saxon.sf.net/}kk102"/>
          <str val="baseline-impact"/>
          <root/>
         </fn>
         <fn role="key" name="normalize-space">
          <cvUntyped to="xs:string">
           <data>
            <dot type="element(Q{http://scap.nist.gov/schema/oscal}prop)"/>
           </data>
          </cvUntyped>
         </fn>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
         <elem role="content" line="35" name="tr" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
          <sequence>
           <elem name="td" flags="l">
            <sequence>
             <valueOf flags="l">
              <fn name="string-join">
               <convert from="xs:anyAtomicType" to="xs:string">
                <currentGroupingKey/>
               </convert>
               <str val=" "/>
              </fn>
             </valueOf>
             <valueOf flags="l">
              <str val="&#xA;            ("/>
             </valueOf>
             <valueOf line="36" flags="l">
              <convert from="xs:integer" to="xs:string">
               <fn name="count">
                <fn name="key">
                 <str val="controldiv-by-baseline-impact"/>
                 <currentGroupingKey/>
                 <check card="1" diag="0|2||key">
                  <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
                 </check>
                </fn>
               </fn>
              </convert>
             </valueOf>
             <valueOf flags="Sl">
              <str val=")"/>
             </valueOf>
            </sequence>
           </elem>
           <elem line="37" name="td" flags="l">
            <elem name="input" flags="l">
             <sequence>
              <att name="type" flags="l">
               <str val="radio"/>
              </att>
              <att name="name" flags="l">
               <str val="baseline"/>
              </att>
              <att name="value" flags="l">
               <fn name="string-join">
                <convert from="xs:anyAtomicType" to="xs:string">
                 <currentGroupingKey/>
                </convert>
                <str val=" "/>
               </fn>
              </att>
             </sequence>
            </elem>
           </elem>
          </sequence>
         </elem>
        </forEachGroup>
        <elem line="41" name="tr" flags="l">
         <elem name="td" flags="l">
          <sequence>
           <att name="colspan" flags="l">
            <str val="2"/>
           </att>
           <elem name="input" flags="l">
            <sequence>
             <att name="name" flags="l">
              <str val="allclear"/>
             </att>
             <att name="type" flags="l">
              <str val="reset"/>
             </att>
            </sequence>
           </elem>
          </sequence>
         </elem>
        </elem>
       </sequence>
      </elem>
     </elem>
    </resultDoc>
   </sequence>
  </template>
 </co>
 <co id="2" binds="">
  <globalVariable name="Q{}source" type="document-node()" line="12" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <root vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="12"/>
  </globalVariable>
 </co>
 <co id="1" binds="1 1 1 1 1 3 1 4 1 1 3 1 1 1 3 1 1 1 1 3 1">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="10.0" seq="13" rank="3" minImp="0" slots="0" flags="os" line="202" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='title';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="203" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <forEach line="204">
       <filter flags="b">
        <slash>
         <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
         <axis name="child" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         </data>
         <str val="number"/>
        </gc>
       </filter>
       <sequence line="205">
        <elem name="span" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
         <sequence>
          <att name="class" flags="l">
           <str val="num"/>
          </att>
          <applyT line="206" flags="i" bSlot="0">
           <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
          </applyT>
         </sequence>
        </elem>
        <valueOf flags="l">
         <str val=" "/>
        </valueOf>
       </sequence>
      </forEach>
      <applyT line="210" flags="i" bSlot="1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="17" rank="0" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='title';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="328" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="329" name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="330" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="331" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="os" line="92" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}control)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='control';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="93" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="control excluded"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="94" flags="i" bSlot="3">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}control)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='control';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="9" rank="1" minImp="0" slots="0" flags="os" line="144" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}stmt)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='stmt';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="145" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="stmt"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="146" mode="Q{}label" bSlot="5">
       <dot role="select" type="element(Q{http://scap.nist.gov/schema/oscal}stmt)"/>
      </applyT>
      <applyT line="147" bSlot="6">
       <except role="select" op="except">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        <filter flags="b">
         <axis name="child" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
         <gc op="=" card="1:1" comp="CCC">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}rel)" jsTest="return item.name=='rel'"/>
          </data>
          <str val="related"/>
         </gc>
        </filter>
       </except>
      </applyT>
      <forEachGroup line="148" algorithm="by">
       <filter role="select" flags="b">
        <axis name="child" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
        <gc op="=" card="1:1" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}rel)" jsTest="return item.name=='rel'"/>
         </data>
         <str val="related"/>
        </gc>
       </filter>
       <true role="key"/>
       <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
       <elem role="content" line="149" name="div" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
        <sequence>
         <att name="class" flags="l">
          <str val="related"/>
         </att>
         <elem line="150" name="h5" flags="l">
          <sequence>
           <att name="class" flags="l">
            <str val="label"/>
           </att>
           <valueOf flags="l">
            <str val="Related controls:"/>
           </valueOf>
          </sequence>
         </elem>
         <applyT line="151" mode="Q{}inline" bSlot="7">
          <currentGroup role="select"/>
         </applyT>
        </sequence>
       </elem>
      </forEachGroup>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}stmt)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='stmt';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="os" line="76" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}catalog)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='catalog';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="77" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="catalog"/>
      </att>
      <applyT line="78" flags="i" bSlot="8">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}catalog)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='catalog';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="15" rank="1" minImp="0" slots="0" flags="os" line="220" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}citation)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='citation';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="221" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="citation"/>
      </att>
      <applyT line="222" flags="i" bSlot="9">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="17" rank="0" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}citation)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='citation';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="328" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="329" name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="330" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="331" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="6" rank="1" minImp="0" slots="0" flags="os" line="124" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="125" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="link"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}rel)" jsTest="return item.name=='rel'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}rel)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="126" mode="Q{}label" bSlot="10">
       <dot role="select" type="element(Q{http://scap.nist.gov/schema/oscal}link)"/>
      </applyT>
      <elem line="127" name="span" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
       <sequence>
        <att name="class" flags="l">
         <str val="value"/>
        </att>
        <applyT line="128" flags="i" bSlot="11">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="17" rank="0" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='link';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="328" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="329" name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="330" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="331" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="0" flags="os" line="196" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}ref)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='ref';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="197" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="ref"/>
      </att>
      <applyT line="198" flags="i" bSlot="12">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}ref)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='ref';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="0" flags="os" line="84" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}group)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='group';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="85" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="group"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="86" flags="i" bSlot="13">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}group)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='group';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="0" flags="os" line="137" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}feat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='feat';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="138" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="feat"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="139" mode="Q{}label" bSlot="14">
       <dot role="select" type="element(Q{http://scap.nist.gov/schema/oscal}feat)"/>
      </applyT>
      <applyT line="140" flags="i" bSlot="15">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}feat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='feat';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="1" minImp="0" slots="0" flags="os" line="214" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='p';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="215" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="p"/>
      </att>
      <applyT line="216" flags="i" bSlot="16">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="17" rank="0" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='p';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="328" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="329" name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="330" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="331" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="0" flags="os" line="109" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}subcontrol)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='subcontrol';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="110" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="subcontrol excluded"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="111" flags="i" bSlot="17">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}subcontrol)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='subcontrol';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="os" line="189" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}references)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='references';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="190" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <str val="references"/>
      </att>
      <elem line="191" name="h3" flags="l">
       <valueOf flags="Sl">
        <str val="References"/>
       </valueOf>
      </elem>
      <applyT line="192" flags="i" bSlot="18">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}references)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='references';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="os" line="82" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}declarations)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='declarations';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="16" rank="0" minImp="0" slots="0" flags="os" line="319" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}declarations)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='declarations';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="320" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="321" name="div" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="322" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="323" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="10.0" seq="13" rank="3" minImp="0" slots="0" flags="os" line="202" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
     <gcEE vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="202" op="=" card="N:1" comp="CCC">
      <literal count="2">
       <str val="description"/>
       <str val="decision"/>
      </literal>
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
     </gcEE>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="203" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <forEach line="204">
       <filter flags="b">
        <slash>
         <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
         <axis name="child" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
        </slash>
        <gc op="=" card="1:1" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         </data>
         <str val="number"/>
        </gc>
       </filter>
       <sequence line="205">
        <elem name="span" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
         <sequence>
          <att name="class" flags="l">
           <str val="num"/>
          </att>
          <applyT line="206" flags="i" bSlot="0">
           <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
          </applyT>
         </sequence>
        </elem>
        <valueOf flags="l">
         <str val=" "/>
        </valueOf>
       </sequence>
      </forEach>
      <applyT line="210" flags="i" bSlot="1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="os" line="169" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="169" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="method"/>
     </gc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="7" rank="2" minImp="0" slots="0" flags="os" line="133" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
     <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="133" op="=" card="1:1" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </data>
      <str val="number"/>
     </gc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="0" flags="os" line="115" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="116" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="prop"/>
        <fn name="string">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <fn name="concat">
           <str val=" "/>
           <data>
            <dot type="attribute(Q{}class)"/>
           </data>
          </fn>
         </slash>
        </fn>
       </fn>
      </att>
      <applyT line="117" mode="Q{}label" bSlot="19">
       <dot role="select" type="element(Q{http://scap.nist.gov/schema/oscal}prop)"/>
      </applyT>
      <elem line="118" name="span" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
       <sequence>
        <att name="class" flags="l">
         <str val="value"/>
        </att>
        <applyT line="119" flags="i" bSlot="20">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.4" seq="17" rank="0" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl">
    <p.nodeTest role="match" test="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="328" name="p" namespaces="xs=http://www.w3.org/2001/XMLSchema xjs=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="class" flags="l">
       <fn name="name">
        <dot type="element()"/>
       </fn>
      </att>
      <elem line="329" name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="tag"/>
        </att>
        <valueOf line="330" flags="l">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </valueOf>
        <valueOf flags="l">
         <str val=": "/>
        </valueOf>
       </sequence>
      </elem>
      <applyT line="331" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="">
  <p.nodeSet>
   <axis vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="33" name="descendant" nodeTest="element(Q{http://scap.nist.gov/schema/oscal}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://scap.nist.gov/schema/oscal'&amp;&amp;q.local=='prop';"/>
  </p.nodeSet>
  <data vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="33">
   <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
  </data>
 </key>
 <key name="Q{http://saxon.sf.net/}kk103" line="0" binds="">
  <p.nodeSet>
   <axis vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="49" name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
  </p.nodeSet>
  <forEach vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="49">
   <fn name="tokenize">
    <cvUntyped to="xs:string">
     <data>
      <slash simple="1">
       <dot type="element(Q{}div)"/>
       <axis line="339" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </slash>
     </data>
    </cvUntyped>
    <str val="\s+"/>
    <str val=""/>
   </fn>
   <fn line="339" name="lower-case">
    <dot type="xs:string"/>
   </fn>
  </forEach>
 </key>
 <key name="Q{http://saxon.sf.net/}kk104" line="0" binds="">
  <p.nodeSet>
   <axis vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="59" name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
  </p.nodeSet>
  <forEach vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="59">
   <fn name="tokenize">
    <cvUntyped to="xs:string">
     <data>
      <slash simple="1">
       <dot type="element(Q{}div)"/>
       <axis line="339" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
      </slash>
     </data>
    </cvUntyped>
    <str val="\s+"/>
    <str val=""/>
   </fn>
   <fn line="339" name="lower-case">
    <dot type="xs:string"/>
   </fn>
  </forEach>
 </key>
 <key name="Q{}controldiv-by-baseline-impact" line="69" module="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" binds="8">
  <p.withPredicate>
   <p.nodeTest test="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
   <gc vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="69" op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
    <data>
     <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}classes" tailCall="false" bSlot="-1">
      <dot type="element(Q{}div)"/>
     </ufCall>
    </data>
    <literal count="2">
     <str val="control"/>
     <str val="subcontrol"/>
    </literal>
   </gc>
  </p.withPredicate>
  <data vn="31" baseUri="file:/home/wendell/Documents/OSCAL/draft/working/demo/sp800-53-profiling.xsl" defaultElementNS="http://scap.nist.gov/schema/oscal" ns="xsl=http://www.w3.org/1999/XSL/Transform xjs=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="69">
   <filter flags="b">
    <slash>
     <filter flags="p">
      <axis name="child" nodeTest="element(Q{}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='p';"/>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="0">
       <dot type="element(Q{}p)"/>
       <str val="baseline-impact"/>
      </ufCall>
     </filter>
     <axis name="child" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';"/>
    </slash>
    <gc op="=" card="1:1" comp="CCC">
     <data>
      <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
     </data>
     <str val="value"/>
    </gc>
   </filter>
  </data>
 </key>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ b7e90fc2?>
