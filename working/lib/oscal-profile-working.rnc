default namespace = "http://csrc.nist.gov/ns/oscal/1.0"

include "oscal-working.rnc" {
  start = (profile | framework)
  # dropping 'desc' element from param
  param   = element param { idAttr, optionalClass, paramValue }

  }

profile = element profile { invoke+, framework? }

invoke = element invoke { hrefAttr, idAttr, (\include?, exclude?) }

# Can have both 'all' and 'call' to switch up with-subcontrol settings
\include = element include { all?, (call |  param)* }

# for capturing overwritten values
\default = element default { text }


# Move params to a separate 'set' element?
# Logic: params override params given in source catalogs or profiles
# but they apply only to controls included.
# parameters not belonging to included controls/subcontrols might be filtered out of 'set'
# applicable parameters in 'set' might remain
# expansion logic could also provide set/param for any param not already represented

# 'all' or 'filter' make sense for inclusions but not exclusions
exclude = element exclude { call+ }

# Only 'yes' should have any effect; processors should assume 'no' when implicit
all = element all { withSubContrlsAttr }

withSubContrlsAttr = attribute with-subcontrols { ('yes'|'no') }?

# 'call' can call *either* a control or a subcontrol by its @id
# Schematron requirement: there exists in the catalog a control or subcontrol
# by the given @id
call = element call { ( withSubContrlsAttr,
  attribute control-id    { text } ) |
  attribute subcontrol-id { text } }

# not used ... for experimental feature
filter = element filter { attribute key { text }, text }


framework = element framework { idAttr, optionalClass,
  title?, declarations?, (category+ | item+ ) }

category = element group { idAttr, optionalClass,
  title?, (prop | link | prose)*,
   (category+ | item+ ) }
  
item =
  element item {
    idAttr, optionalClass, title?, param*,
    (prop | link | prose)*
  }

# an overlay - a framework whose structure matches the catalog?

# frameworks contain categories or items
# categories contain categories or items
# items contain title?, prop*, p*, link*
# strict governance over item/link/@rel
# declarations too :-)
# validation can ensure that framework links are scoped
# corresponding with catalogs/controls included in the profile
