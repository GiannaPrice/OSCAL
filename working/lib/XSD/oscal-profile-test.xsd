<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://scap.nist.gov/schema/oscal" xmlns:oscal="http://scap.nist.gov/schema/oscal">
  <xs:include schemaLocation="oscal-working.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:element name="profile">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal:invoke"/>
        <xs:element minOccurs="0" ref="oscal:framework"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="invoke">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="oscal:include"/>
        <xs:element minOccurs="0" ref="oscal:exclude"/>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:hrefAttr"/>
      <xs:attributeGroup ref="oscal:idAttr"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="include">
    <xs:complexType>
      <xs:choice>
        <xs:sequence>
          <xs:element ref="oscal:all"/>
          <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:param"/>
        </xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="oscal:call"/>
          <xs:element ref="oscal:param"/>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <!--
    Move params to a separate 'set' element?
    Logic: params override params given in source catalogs or profiles
    but they apply only to controls included.
    parameters not belonging to included controls/subcontrols might be filtered out of 'set'
    applicable parameters in 'set' might remain
    expansion logic could also provide set/param for any param not already represented
  -->
  <!-- 'all' or 'filter' make sense for inclusions but not exclusions -->
  <xs:element name="exclude">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="oscal:call"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="all">
    <xs:complexType/>
  </xs:element>
  <!--
    'call' can call *either* a control or a subcontrol by its @id
    Schematron requirement: there exists in the catalog a control or subcontrol
    by the given @id
  -->
  <xs:element name="call">
    <xs:complexType>
      <xs:attribute name="control-id"/>
      <xs:attribute name="subcontrol-id"/>
    </xs:complexType>
  </xs:element>
  <!-- not used ... for experimental feature -->
  <xs:element name="filter">
    <xs:complexType mixed="true">
      <xs:attribute name="key" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="framework">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="oscal:title"/>
        <xs:element minOccurs="0" ref="oscal:declarations"/>
        <xs:choice>
          <xs:group maxOccurs="unbounded" ref="oscal:category"/>
          <xs:element maxOccurs="unbounded" ref="oscal:item"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:idAttr"/>
      <xs:attributeGroup ref="oscal:optionalClass"/>
    </xs:complexType>
  </xs:element>
  <xs:group name="category">
    <xs:sequence>
      <xs:element name="group">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" ref="oscal:title"/>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element ref="oscal:prop"/>
              <xs:element ref="oscal:link"/>
              <xs:group ref="oscal:prose"/>
            </xs:choice>
            <xs:choice>
              <xs:group maxOccurs="unbounded" ref="oscal:category"/>
              <xs:element maxOccurs="unbounded" ref="oscal:item"/>
            </xs:choice>
          </xs:sequence>
          <xs:attributeGroup ref="oscal:idAttr"/>
          <xs:attributeGroup ref="oscal:optionalClass"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:element name="item">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="oscal:title"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="oscal:param"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="oscal:prop"/>
          <xs:element ref="oscal:link"/>
          <xs:group ref="oscal:prose"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="oscal:idAttr"/>
      <xs:attributeGroup ref="oscal:optionalClass"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
<!-- an overlay - a framework whose structure matches the catalog? -->
<!--
  frameworks contain categories or items
  categories contain categories or items
  items contain title?, prop*, p*, link*
  strict governance over item/link/@rel
  declarations too :-)
  validation can ensure that framework links are scoped
  corresponding with catalogs/controls included in the profile
-->
